{"version":3,"sources":["redditApi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchBtn","searchInput","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","querySelector","remove","truncateString","myString","limit","shortened","indexOf","substring","addEventListener","e","value","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML","preventDefault"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,OAAQ,SAASC,EAAYC,EAAaC,GACjCC,OAAAA,MACkCH,uCAAAA,OAAAA,EAAmBE,UAAAA,OAAAA,EAAgBD,WAAAA,OAAAA,IAEzEG,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,OAPjB,QAAA,QAAA;;AC+Ed,aA/ED,IAAA,EAAA,EAAA,QAAA,gBA+EC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7ED,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAYF,SAASC,eAAe,cACpCE,EAAcH,SAASC,eAAe,gBAiD5C,SAASG,EAAYC,EAASC,GAEtBC,IAAAA,EAAMP,SAASQ,cAAc,OAEnCD,EAAID,UAAqBA,SAAAA,OAAAA,GAEzBC,EAAIE,YAAYT,SAASU,eAAeL,IAElCM,IAAAA,EAAkBX,SAASC,eAAe,oBAE1CjB,EAASgB,SAASC,eAAe,UAGvCU,EAAgBC,aAAaL,EAAKvB,GAGlC6B,WAAW,WACTb,SAASc,cAAc,UAAUC,UAChC,KAIL,SAASC,EAAeC,EAAUC,GAC1BC,IAAAA,EAAYF,EAASG,QAAQ,IAAKF,GACpCC,OAAc,GAAdA,EAAwBF,EACrBA,EAASI,UAAU,EAAGF,GAxE/BpB,EAAWuB,iBAAiB,SAAU,SAAAC,GAE9BpC,IAAAA,EAASa,SAASc,cAAc,gCAAgCU,MAEhEtC,EAAcc,SAASC,eAAe,SAASuB,MAE/CvC,EAAakB,EAAYqB,MAEb,IAAdvC,GAEFmB,EAAY,2BAA4B,gBAG1CD,EAAYqB,MAAQ,GAGbxC,EAAAA,QAAAA,OAAOC,EAAYC,EAAaC,GAAQE,KAAK,SAAAoC,GAC9CC,IAAAA,EAAS,6BACb7B,QAAQC,IAAI2B,GACZA,EAAQE,QAAQ,SAAAC,GAEVC,IAAAA,EAAQD,EAAKE,QACbF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,sEACJP,GAEiCG,yEAAAA,OAAAA,EAEND,2FAAAA,OAAAA,EAAKM,MACPlB,wCAAAA,OAAAA,EAAeY,EAAKO,SAAU,KAC1CP,2BAAAA,OAAAA,EAAKK,IAGiCL,4IAAAA,OAAAA,EAAKQ,UACdR,4DAAAA,OAAAA,EAAKS,MAV/C,+CAeFX,GAAU,SACV1B,SAASC,eAAe,WAAWqC,UAAYZ,IAGjDH,EAAEgB","file":"Reddit_Search.d2082dd7.js","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n","import reddit from \"./redditApi\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchBtn = document.getElementById(\"search-btn\");\nconst searchInput = document.getElementById(\"search-input\");\n\nsearchForm.addEventListener(\"submit\", e => {\n  // Get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  // Get limit\n  const searchLimit = document.getElementById(\"limit\").value;\n  // Get search\n  const searchTerm = searchInput.value;\n  // Check for input\n  if (searchTerm == \"\") {\n    // Show message\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  }\n  // Clear field\n  searchInput.value = \"\";\n\n  // Search Reddit\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    let output = '<div class=\"card-columns\">';\n    console.log(results);\n    results.forEach(post => {\n      // Check for image\n      let image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\n      output += `\n      <div class=\"card mb-2\">\n      <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">${post.title}</h5>\n        <p class=\"card-text\">${truncateString(post.selftext, 100)}</p>\n        <a href=\"${post.url}\" target=\"_blank\n        \" class=\"btn btn-primary\">Read More</a>\n        <hr>\n        <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span> \n        <span class=\"badge badge-dark\">Score: ${post.score}</span>\n      </div>\n    </div>\n      `;\n    });\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\n// Show Message Function\nfunction showMessage(message, className) {\n  // Create div\n  const div = document.createElement(\"div\");\n  // Add classes\n  div.className = `alert ${className}`;\n  // Add text\n  div.appendChild(document.createTextNode(message));\n  // Get parent\n  const searchContainer = document.getElementById(\"search-container\");\n  // Get form\n  const search = document.getElementById(\"search\");\n\n  // Insert alert\n  searchContainer.insertBefore(div, search);\n\n  // Timeout after 3 sec\n  setTimeout(function() {\n    document.querySelector(\".alert\").remove();\n  }, 3000);\n}\n\n// Truncate String Function\nfunction truncateString(myString, limit) {\n  const shortened = myString.indexOf(\" \", limit);\n  if (shortened == -1) return myString;\n  return myString.substring(0, shortened);\n}\n"]}